# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/v0.44.0/zarf.schema.json
kind: ZarfPackageConfig

metadata:
  name: minio-operator
  description: UDS Minio Operator and Tenant Package`

components:
  - name: minio-operator
    charts:
      - name: uds-minio-config
        namespace: minio-operator
        version: 0.1.0
        localPath: ../chart
        variables:
          - name: TENANT
            path: name
            description: The name of the tenant
      - name: minio-operator
        version: v6.0.4
        url: https://github.com/minio/operator.git
        gitPath: helm/operator
        namespace: minio-operator
        valuesFiles:
          - ../values/common-values.yaml
      - name: minio-tenant
        version: v6.0.4
        url: https://github.com/minio/operator.git
        gitPath: helm/tenant/
        namespace: minio
        valuesFiles:
          - ../values/tenant-values.yaml
        variables:
          - name: TENANT
            path: tenant.name
            description: The name of the tenant
    actions:
      onDeploy:
        after:
          - cmd: ./zarf tools kubectl -n minio rollout restart statefulset
            description: Restart Minio StatefulSet so pods cycle on upgrades
          - cmd: ./zarf tools kubectl -n minio rollout status statefulset
            description: Wait for Rollout to complete before continuing
          - description: Validate Minio Operator Package
            maxTotalSeconds: 300
            wait:
              cluster:
                kind: packages.uds.dev
                name: minio-operator
                namespace: minio-operator
                condition: "'{.status.phase}'=Ready"
          - description: Validate Minio Tenant Package
            maxTotalSeconds: 300
            wait:
              cluster:
                kind: Packages
                name: minio
                namespace: minio
                condition: "'{.status.phase}'=Ready"
          - description: Minio App/Tenant Status
            wait:
              cluster:
                kind: pod
                name: app=minio
                namespace: minio
                condition: Ready

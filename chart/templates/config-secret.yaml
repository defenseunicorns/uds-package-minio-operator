# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

{{- $password := .Values.rootPassword | default (randAlphaNum 32) }}
{{- $user := .Values.rootUser | default "minio" }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.name }}
  namespace: minio
type: Opaque
stringData:
  config.env: |-
      export MINIO_ROOT_USER={{ $user | quote }}
      export MINIO_ROOT_PASSWORD={{ $password | quote }}
      export MINIO_PROMETHEUS_AUTH_TYPE="public"
      {{- if .Values.sso.enabled }}
      export MINIO_IDENTITY_OPENID_DISPLAY_NAME={{ .Values.name }}
      export MINIO_IDENTITY_OPENID_CLAIM_NAME=policy
      export MINIO_IDENTITY_OPENID_CLIENT_ID="{{ printf "%s-sso" .Values.name }}"
      export MINIO_IDENTITY_OPENID_CLIENT_SECRET={{ .Values.identityOpenidClientSecret }}
      export MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC=on
      export MINIO_IDENTITY_OPENID_SCOPES=openid
      export MINIO_IDENTITY_OPENID_ENABLE=on
      export MINIO_BROWSER_REDIRECT_URL="https://minio-console.{{ .Values.domain }}"
      export MINIO_IDENTITY_OPENID_CONFIG_URL="{{ default (printf "https://sso.%s/realms/uds/.well-known/openid-configuration" .Values.domain) .Values.identityOpenidConfigUrl }}"
      {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.name }}-creds
  namespace: minio
stringData:
  {{- $data := dict "rootUser" $user }}
  {{- $data = merge $data (dict "rootPassword" $password) }}
  {{- toYaml $data | nindent 2 }}

{{- $password := .Values.minio.rootPassword | default (randAlphaNum 32) }}
{{- $user := .Values.minio.rootUser | default "minio" }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.minio.displayName }}
  namespace: minio
type: Opaque
stringData:
  config.env: |-
    export MINIO_ROOT_USER={{ $user | quote }}
    export MINIO_ROOT_PASSWORD={{ $password | quote }}
    
    {{- if .Values.sso.enabled }}
    export MINIO_IDENTITY_OPENID_DISPLAY_NAME={{ .Values.minio.displayName }}
    export MINIO_IDENTITY_OPENID_CLAIM_NAME={{ .Values.minio.identityOpenidClaimName }}
    export MINIO_IDENTITY_OPENID_CLIENT_ID="{{ printf "%s-sso" .Values.minio.displayName }}"
    export MINIO_IDENTITY_OPENID_CLIENT_SECRET={{ .Values.minio.identityOpenidClientSecret }}
    export MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC={{ .Values.minio.identityOpenidRedirectUriDynamic }}
    export MINIO_IDENTITY_OPENID_SCOPES={{ .Values.minio.identityOpenidScopes }}
    export MINIO_IDENTITY_OPENID_ENABLE=on
    export MINIO_BROWSER_REDIRECT_URL="https://minio-console.{{ .Values.minio.domain }}"
    # export MINIO_IDENTITY_OPENID_ROLE_POLICY="consoleAdmin"
    export MINIO_IDENTITY_OPENID_CONFIG_URL="{{ default (printf "https://sso.%s/realms/uds/.well-known/openid-configuration" .Values.minio.domain) .Values.minio.identityOpenidConfigUrl }}"
    {{- end }}

{{- if .Values.copyPassword.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.copyPassword.secretName }}
  namespace: {{ .Values.copyPassword.namespace }}
stringData:
  {{- $data := dict .Values.copyPassword.secretIDKey $user }}
  {{- $data = merge $data (dict .Values.copyPassword.secretPasswordKey $password) }}
  {{- toYaml $data | nindent 2 }}
{{- end }}
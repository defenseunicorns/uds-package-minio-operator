# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

{{- range .Values.apps }}
{{- $secretName := (printf "minio-%s" .name) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .name }}-minio-setup-{{ $.Release.Revision }}
  namespace: minio
spec:
  template:
    spec:
      containers:
      - name: minio-setup
        image: {{ $.Values.mcImage }}
        command: [{{ $.Values.mcShell | quote }}, "-c"]
        args:
          - |
            # If we cannot connect to the minio cluster kill the Job to force a restart
            mc alias set myminio $MINIO_SERVER $MINIO_ACCESS_KEY $MINIO_SECRET_KEY || exit 1;

            {{- range $bucket := .bucketNames }}
            mc mb --ignore-existing myminio/{{ $bucket }};
            {{- end }}

            mc admin policy create myminio {{ .name }}-policy /config/policy.json;
            mc admin user add myminio $USER $USER_SECRET;
            mc admin policy attach myminio {{ .name }}-policy --user $USER || echo Skipping user attachment;
        env:
        - name: MINIO_SERVER
          value: "http://uds-minio-hl.minio.svc.cluster.local:9000"
        - name: MC_CONFIG_DIR
          value: "/tmp/mc/"
        - name: USER
          valueFrom:
            secretKeyRef:
              name: {{ $secretName }}
              key: "accessKey"
        - name: USER_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ $secretName }}
              key: "secretKey"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name:  {{ $.Values.name }}-creds
              key: rootUser
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name:  {{ $.Values.name }}-creds
              key: rootPassword
        volumeMounts:
        - name: policy-config
          mountPath: /config
        - name: config-volume
          mountPath: /tmp
      restartPolicy: OnFailure
      volumes:
        - name: policy-config
          configMap:
            name: {{ .name }}-minio-policy
        - name: config-volume
          emptyDir: {}
      restartPolicy: OnFailure
  backoffLimit: 4
---
{{- end }}
